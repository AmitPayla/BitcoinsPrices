{"version":3,"sources":["App.js","index.js"],"names":["App","props","getcurrentData","axios","get","then","res","setState","currentrate","data","bpi","USD","rate","currency","code","Crptocurrency","chartName","catch","err","console","log","intervalID1","setTimeout","bind","getData","prices","dates","Object","keys","values","newSeries","state","series","map","s","push","name","options","labels","xaxis","categories","intervalID2","chart","id","type","show","rotate","max","tickPlacement","responsive","breakpoint","this","clearTimeout","style","textAlign","marginTop","className","display","flexDirection","justifyContent","border","padding","backgroundColor","color","fontSize","borderRadius","width","height","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAyKeA,E,kDAjKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4CRC,eAAiB,WACdC,IACEC,IAAI,qDACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZC,YAAaF,EAAIG,KAAKC,IAAIC,IAAIC,KAC9BC,SAAUP,EAAIG,KAAKC,IAAIC,IAAIG,KAC3BC,cAAeT,EAAIG,KAAKO,eAG3BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhB,EAAKG,YAAcC,WAAW,EAAKpB,eAAeqB,KAApB,gBAAgC,MA1D7C,EA6DnBC,QAAU,WACR,IAAIC,EAAS,GACTC,EAAQ,GACZvB,IACGC,IAAI,0DACJC,MAAK,SAACC,GACLoB,EAAQC,OAAOC,KAAKtB,EAAIG,KAAKC,KAC7Be,EAASE,OAAOE,OAAOvB,EAAIG,KAAKC,KAEhC,IAAMoB,EAAY,GAClB,EAAKC,MAAMC,OAAOC,KAAI,SAACC,GACrB,IAAMzB,EAAI,YAAOgB,GACjBK,EAAUK,KAAK,CAAE1B,OAAM2B,KAAMF,EAAEE,UAGjC,EAAK7B,SAAS,CACZyB,OAAQF,EACRO,QAAQ,2BACH,EAAKN,MAAMM,SADT,IAELC,OAAQZ,EACRa,MAAM,2BAAM,EAAKR,MAAMM,QAAQE,OAA1B,IAAiCC,WAAYd,WAIvDT,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEd,EAAKuB,YAAcnB,WAAW,EAAKE,QAAQD,KAAb,gBAAyB,MArFzD,EAAKQ,MAAQ,CACXM,QAAS,CACPK,MAAO,CACLC,GAAI,aAENJ,MAAO,CACLK,KAAM,WACNJ,WAAY,GACZF,OAAQ,CACNO,MAAM,EACNC,QAAS,IAEXC,IAAK,GACLC,cAAe,OAGnBhB,OAAQ,CACN,CACEI,KAAM,UACN3B,KAAM,KAGVwC,WAAa,CACX,CACEC,WAAa,MAGjB1C,YAAa,GACbK,SAAU,GACVE,cAAe,IAhCA,E,gEAqCjBoC,KAAK3B,UACL2B,KAAKjD,mB,2CAILkD,aAAaD,KAAK9B,aAClB+B,aAAaD,KAAKV,e,+BAiDlB,OACE,oCACE,6BACE,yBAAKY,MAAO,CAAEC,UAAW,SAAUC,UAAW,SAC5C,uEAEF,yBACEC,UAAU,YACVH,MAAO,CACLI,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBJ,UAAW,SAGb,yBACEF,MAAO,CACLI,QAAS,OACTC,cAAe,SACfE,OAAQ,qBACRC,QAAS,YACTC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,OACVC,aAAc,SAGf,IACD,8CAA0B,IAC1B,8BACG,IACAd,KAAKpB,MAAMhB,cAFd,OAEiCoC,KAAKpB,MAAMvB,aACpC,KAEV,yBACE6C,MAAO,CACLI,QAAS,OACTC,cAAe,SACfE,OAAQ,qBACRC,QAAS,YACTC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,OACVC,aAAc,SAGf,IACD,0CAAsB,IACtB,0BAAMZ,MAAO,CAAEC,UAAW,WAAaH,KAAKpB,MAAMlB,UAAiB,MAIvE,yBAAK2C,UAAU,OACb,6BACE,kBAAC,IAAD,CACEnB,QAASc,KAAKpB,MAAMM,QACpBL,OAAQmB,KAAKpB,MAAMC,OACnBY,KAAK,OACLsB,MAAM,OACNC,OAAO,gB,GA1JLC,a,MCAlBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.8a39bdbc.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  intervalID1;\n  intervalID2;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\",\n        },\n        xaxis: {\n          type: \"category\",\n          categories: [],\n          labels: {\n            show: true,\n            rotate: -45,\n          },\n          max: 32,\n          tickPlacement: \"on\",\n        },\n      },\n      series: [\n        {\n          name: \"Bitcoin\",\n          data: [],\n        },\n      ],\n      responsive : [\n        {\n          breakpoint : 1000\n        }\n      ],\n      currentrate: \"\",\n      currency: \"\",\n      Crptocurrency: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.getcurrentData();\n  }\n\n  componentWillMount() {\n    clearTimeout(this.intervalID1);\n    clearTimeout(this.intervalID2);\n  }\n  getcurrentData = () => {\n     axios\n      .get(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\n      .then((res) => {\n        this.setState({\n          currentrate: res.data.bpi.USD.rate,\n          currency: res.data.bpi.USD.code,\n          Crptocurrency: res.data.chartName,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.intervalID1 = setTimeout(this.getcurrentData.bind(this), 4000);\n  };\n\n  getData = () => {\n    var prices = [];\n    var dates = [];\n    axios\n      .get(\"https://api.coindesk.com/v1/bpi/historical/close.json?\")\n      .then((res) => {\n        dates = Object.keys(res.data.bpi);\n        prices = Object.values(res.data.bpi);\n\n        const newSeries = [];\n        this.state.series.map((s) => {\n          const data = [...prices  ];\n          newSeries.push({ data, name: s.name });\n        });\n\n        this.setState({\n          series: newSeries,\n          options: {\n            ...this.state.options,\n            labels: dates,\n            xaxis: { ...this.state.options.xaxis, categories: dates },\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n      this.intervalID2 = setTimeout(this.getData.bind(this), 5000);\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n            <h4>Bitcoin Price refreshs on every update</h4>\n          </div>\n          <div\n            className=\"container\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                border: \" 2px solid #2196f3\",\n                padding: \"10px 20px\",\n                backgroundColor: \"#2196f3\",\n                color: \"white\",\n                fontSize: \"bold\",\n                borderRadius: \"10px\",\n              }}\n            >\n              {\" \"}\n              <span>Current rate</span>{\" \"}\n              <span>\n                {\" \"}\n                {this.state.Crptocurrency} : ${this.state.currentrate}\n              </span>{\" \"}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                border: \" 2px solid #2196f3\",\n                padding: \"10px 30px\",\n                backgroundColor: \"#2196f3\",\n                color: \"white\",\n                fontSize: \"bold\",\n                borderRadius: \"10px\",\n              }}\n            >\n              {\" \"}\n              <span>Currency</span>{\" \"}\n              <span style={{ textAlign: \"center\" }}>{this.state.currency}</span>{\" \"}\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div>\n              <Chart\n                options={this.state.options}\n                series={this.state.series}\n                type=\"line\"\n                width=\"1500\"\n                height=\"500\"\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App/>,document.getElementById('root'));\n\n"],"sourceRoot":""}